#!/usr/bin/env bash

# Проверка, что bluetooth активен
bluetoothctl show | grep -q "Powered: yes"
if [[ $? -ne 0 ]]; then
  bluetoothctl power on
fi

# Сначала берём уже известные устройства
KNOWN=$(bluetoothctl devices | grep '^Device' | sed 's/Device //')
DEVICES="Off\nScan...\n$KNOWN"

# Показываем через rofi
CHOICE=$(echo -e "$DEVICES" | rofi -dmenu -p "Bluetooth devices:")

[[ -z "$CHOICE" ]] && exit 0

if [[ "$CHOICE" == "Off" ]]; then
  bluetoothctl power off
  notify-send "󰂯 Bluetooth" "Adapter powered off"
  exit 0
fi

if [[ "$CHOICE" == "Scan..." ]]; then
  # Включаем сканирование
  bluetoothctl scan on &
  sleep 5  # Дай адаптеру время найти новых
  bluetoothctl scan off

  # Обновляем список
  FOUND=$(bluetoothctl devices | grep '^Device' | sed 's/Device //')
  DEVICES="Off\n$FOUND"

  CHOICE=$(echo -e "$DEVICES" | rofi -dmenu -p "Bluetooth devices:")
  [[ -z "$CHOICE" ]] && exit 0

  if [[ "$CHOICE" == "Off" ]]; then
    bluetoothctl power off
    notify-send "󰂯 Bluetooth" "Adapter powered off"
    exit 0
  fi
fi

# Вытащить MAC
MAC=$(echo "$CHOICE" | awk '{print $1}')

# Проверить, подключено ли уже
IS_CONNECTED=$(bluetoothctl info "$MAC" | grep "Connected: yes")

if [[ -n "$IS_CONNECTED" ]]; then
  # Уже подключён — отключаем
  bluetoothctl disconnect "$MAC"
  notify-send "󰂯 Bluetooth" "Disconnected: $CHOICE"
else
  # Иначе — подключаем с твоим блоком
  bluetoothctl << EOF
agent on
default-agent
pair $MAC
trust $MAC
connect $MAC
EOF

  notify-send "󰂯 Bluetooth" "Connected: $CHOICE"
fi
